<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="SpamSchutz - simple way to protect your mail adresses from naïve spammers"><sessioninfo id="mushin-59517a2d" start="1518559829032" dump="1518559831063"/><sessioninfo id="mushin-f7259a42" start="1518559834600" dump="1518559836430"/><package name="de/aikiit/spamprotector/converter"><class name="de/aikiit/spamprotector/converter/SpamProtector"><method name="toPlain" desc="(Ljava/lang/String;)Ljava/lang/String;" line="52"><counter type="INSTRUCTION" missed="0" covered="291"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toEncoded" desc="(Ljava/lang/String;)Ljava/lang/String;" line="88"><counter type="INSTRUCTION" missed="0" covered="156"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="235" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="266" covered="544"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="1" covered="29"/><counter type="COMPLEXITY" missed="4" covered="14"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/aikiit/spamprotector/converter/CharacterConverter"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPlain" desc="()Ljava/lang/String;" line="140"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReplacement" desc="()Ljava/lang/String;" line="147"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="1819"/><counter type="LINE" missed="0" covered="96"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="627" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="646" covered="1892"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="102"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SpamProtector.java"><line nr="31" mi="10" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="9" mb="0" cb="0"/><line nr="35" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="30" mb="0" cb="2"/><line nr="40" mi="0" ci="14" mb="0" cb="0"/><line nr="41" mi="0" ci="16" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="0" ci="21" mb="0" cb="2"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="54" mi="0" ci="11" mb="0" cb="0"/><line nr="56" mi="0" ci="21" mb="0" cb="2"/><line nr="57" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="29" mb="0" cb="2"/><line nr="61" mi="0" ci="11" mb="0" cb="0"/><line nr="62" mi="0" ci="22" mb="0" cb="2"/><line nr="63" mi="0" ci="14" mb="0" cb="0"/><line nr="64" mi="0" ci="14" mb="0" cb="0"/><line nr="66" mi="0" ci="17" mb="0" cb="0"/><line nr="69" mi="0" ci="31" mb="0" cb="2"/><line nr="70" mi="0" ci="13" mb="0" cb="0"/><line nr="71" mi="0" ci="11" mb="0" cb="0"/><line nr="73" mi="0" ci="17" mb="0" cb="0"/><line nr="75" mi="0" ci="19" mb="0" cb="0"/><line nr="78" mi="0" ci="18" mb="0" cb="0"/><line nr="88" mi="0" ci="21" mb="0" cb="2"/><line nr="89" mi="0" ci="11" mb="0" cb="0"/><line nr="91" mi="0" ci="43" mb="0" cb="2"/><line nr="92" mi="0" ci="41" mb="0" cb="2"/><line nr="95" mi="0" ci="19" mb="0" cb="0"/><line nr="97" mi="0" ci="18" mb="0" cb="0"/><counter type="INSTRUCTION" missed="266" covered="544"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="1" covered="29"/><counter type="COMPLEXITY" missed="4" covered="14"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CharacterConverter.java"><line nr="28" mi="0" ci="391" mb="0" cb="0"/><line nr="30" mi="0" ci="15" mb="0" cb="0"/><line nr="31" mi="0" ci="15" mb="0" cb="0"/><line nr="32" mi="0" ci="15" mb="0" cb="0"/><line nr="33" mi="0" ci="15" mb="0" cb="0"/><line nr="34" mi="0" ci="15" mb="0" cb="0"/><line nr="35" mi="0" ci="15" mb="0" cb="0"/><line nr="36" mi="0" ci="15" mb="0" cb="0"/><line nr="37" mi="0" ci="15" mb="0" cb="0"/><line nr="38" mi="0" ci="15" mb="0" cb="0"/><line nr="39" mi="0" ci="15" mb="0" cb="0"/><line nr="40" mi="0" ci="15" mb="0" cb="0"/><line nr="41" mi="0" ci="15" mb="0" cb="0"/><line nr="42" mi="0" ci="15" mb="0" cb="0"/><line nr="43" mi="0" ci="15" mb="0" cb="0"/><line nr="44" mi="0" ci="15" mb="0" cb="0"/><line nr="45" mi="0" ci="15" mb="0" cb="0"/><line nr="46" mi="0" ci="15" mb="0" cb="0"/><line nr="47" mi="0" ci="15" mb="0" cb="0"/><line nr="48" mi="0" ci="15" mb="0" cb="0"/><line nr="49" mi="0" ci="15" mb="0" cb="0"/><line nr="50" mi="0" ci="15" mb="0" cb="0"/><line nr="51" mi="0" ci="15" mb="0" cb="0"/><line nr="52" mi="0" ci="15" mb="0" cb="0"/><line nr="53" mi="0" ci="15" mb="0" cb="0"/><line nr="54" mi="0" ci="15" mb="0" cb="0"/><line nr="55" mi="0" ci="15" mb="0" cb="0"/><line nr="56" mi="0" ci="15" mb="0" cb="0"/><line nr="57" mi="0" ci="15" mb="0" cb="0"/><line nr="58" mi="0" ci="15" mb="0" cb="0"/><line nr="59" mi="0" ci="15" mb="0" cb="0"/><line nr="60" mi="0" ci="15" mb="0" cb="0"/><line nr="61" mi="0" ci="15" mb="0" cb="0"/><line nr="62" mi="0" ci="15" mb="0" cb="0"/><line nr="63" mi="0" ci="15" mb="0" cb="0"/><line nr="64" mi="0" ci="15" mb="0" cb="0"/><line nr="65" mi="0" ci="15" mb="0" cb="0"/><line nr="66" mi="0" ci="15" mb="0" cb="0"/><line nr="67" mi="0" ci="15" mb="0" cb="0"/><line nr="68" mi="0" ci="15" mb="0" cb="0"/><line nr="69" mi="0" ci="15" mb="0" cb="0"/><line nr="70" mi="0" ci="15" mb="0" cb="0"/><line nr="71" mi="0" ci="15" mb="0" cb="0"/><line nr="72" mi="0" ci="15" mb="0" cb="0"/><line nr="73" mi="0" ci="15" mb="0" cb="0"/><line nr="74" mi="0" ci="15" mb="0" cb="0"/><line nr="75" mi="0" ci="15" mb="0" cb="0"/><line nr="76" mi="0" ci="15" mb="0" cb="0"/><line nr="77" mi="0" ci="15" mb="0" cb="0"/><line nr="78" mi="0" ci="15" mb="0" cb="0"/><line nr="79" mi="0" ci="15" mb="0" cb="0"/><line nr="80" mi="0" ci="15" mb="0" cb="0"/><line nr="81" mi="0" ci="15" mb="0" cb="0"/><line nr="82" mi="0" ci="15" mb="0" cb="0"/><line nr="83" mi="0" ci="15" mb="0" cb="0"/><line nr="84" mi="0" ci="15" mb="0" cb="0"/><line nr="85" mi="0" ci="15" mb="0" cb="0"/><line nr="86" mi="0" ci="15" mb="0" cb="0"/><line nr="87" mi="0" ci="15" mb="0" cb="0"/><line nr="88" mi="0" ci="15" mb="0" cb="0"/><line nr="89" mi="0" ci="15" mb="0" cb="0"/><line nr="90" mi="0" ci="15" mb="0" cb="0"/><line nr="91" mi="0" ci="15" mb="0" cb="0"/><line nr="92" mi="0" ci="15" mb="0" cb="0"/><line nr="93" mi="0" ci="15" mb="0" cb="0"/><line nr="94" mi="0" ci="15" mb="0" cb="0"/><line nr="95" mi="0" ci="15" mb="0" cb="0"/><line nr="96" mi="0" ci="15" mb="0" cb="0"/><line nr="97" mi="0" ci="15" mb="0" cb="0"/><line nr="98" mi="0" ci="15" mb="0" cb="0"/><line nr="99" mi="0" ci="15" mb="0" cb="0"/><line nr="100" mi="0" ci="15" mb="0" cb="0"/><line nr="101" mi="0" ci="15" mb="0" cb="0"/><line nr="102" mi="0" ci="15" mb="0" cb="0"/><line nr="103" mi="0" ci="15" mb="0" cb="0"/><line nr="104" mi="0" ci="15" mb="0" cb="0"/><line nr="105" mi="0" ci="15" mb="0" cb="0"/><line nr="106" mi="0" ci="15" mb="0" cb="0"/><line nr="107" mi="0" ci="15" mb="0" cb="0"/><line nr="108" mi="0" ci="15" mb="0" cb="0"/><line nr="109" mi="0" ci="15" mb="0" cb="0"/><line nr="110" mi="0" ci="15" mb="0" cb="0"/><line nr="111" mi="0" ci="15" mb="0" cb="0"/><line nr="112" mi="0" ci="15" mb="0" cb="0"/><line nr="113" mi="0" ci="15" mb="0" cb="0"/><line nr="114" mi="0" ci="15" mb="0" cb="0"/><line nr="115" mi="0" ci="15" mb="0" cb="0"/><line nr="116" mi="0" ci="15" mb="0" cb="0"/><line nr="117" mi="0" ci="15" mb="0" cb="0"/><line nr="118" mi="0" ci="15" mb="0" cb="0"/><line nr="119" mi="0" ci="15" mb="0" cb="0"/><line nr="120" mi="0" ci="15" mb="0" cb="0"/><line nr="121" mi="0" ci="15" mb="0" cb="0"/><line nr="122" mi="0" ci="15" mb="0" cb="0"/><line nr="123" mi="0" ci="15" mb="0" cb="0"/><line nr="124" mi="0" ci="15" mb="0" cb="0"/><line nr="131" mi="0" ci="11" mb="0" cb="0"/><line nr="132" mi="0" ci="10" mb="0" cb="0"/><line nr="133" mi="0" ci="10" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><line nr="140" mi="0" ci="10" mb="0" cb="0"/><line nr="147" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="646" covered="1892"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="102"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="912" covered="2436"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="1" covered="131"/><counter type="COMPLEXITY" missed="7" covered="20"/><counter type="METHOD" missed="7" covered="9"/><counter type="CLASS" missed="0" covered="2"/></package><package name="de/aikiit/spamprotector/util"><class name="de/aikiit/spamprotector/util/Version"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/aikiit/spamprotector/util/LocalizationHelper"><method name="setLocale" desc="()V" line="66"><counter type="INSTRUCTION" missed="9" covered="186"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLocale" desc="()Ljava/util/Locale;" line="88"><counter type="INSTRUCTION" missed="28" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLanguage" desc="()Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBundleString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterizedBundleString" desc="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;" line="144"><counter type="INSTRUCTION" missed="11" covered="60"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="209" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="288" covered="411"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="3" covered="28"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Version.java"><line nr="26" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LocalizationHelper.java"><line nr="39" mi="10" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="0"/><line nr="52" mi="0" ci="9" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="0" ci="21" mb="0" cb="0"/><line nr="71" mi="9" ci="26" mb="1" cb="3"/><line nr="72" mi="0" ci="18" mb="0" cb="0"/><line nr="73" mi="0" ci="18" mb="0" cb="0"/><line nr="75" mi="0" ci="22" mb="0" cb="0"/><line nr="76" mi="0" ci="17" mb="0" cb="0"/><line nr="79" mi="0" ci="11" mb="0" cb="0"/><line nr="80" mi="0" ci="12" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="9" ci="11" mb="1" cb="1"/><line nr="89" mi="10" ci="0" mb="0" cb="0"/><line nr="90" mi="9" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="18" mb="0" cb="0"/><line nr="99" mi="0" ci="10" mb="0" cb="0"/><line nr="111" mi="0" ci="17" mb="0" cb="0"/><line nr="113" mi="0" ci="11" mb="0" cb="0"/><line nr="114" mi="0" ci="8" mb="0" cb="0"/><line nr="115" mi="0" ci="19" mb="0" cb="0"/><line nr="116" mi="0" ci="9" mb="0" cb="0"/><line nr="144" mi="11" ci="35" mb="1" cb="1"/><line nr="145" mi="0" ci="11" mb="0" cb="0"/><line nr="146" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="288" covered="411"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="3" covered="28"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="338" covered="411"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="4" covered="28"/><counter type="COMPLEXITY" missed="14" covered="9"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="1" covered="1"/></package><package name="de/aikiit/spamprotector"><class name="de/aikiit/spamprotector/GUI"><method name="&lt;init&gt;" desc="(Z)V" line="52"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(Z)V" line="67"><counter type="INSTRUCTION" missed="529" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$init$5" desc="(Ljava/awt/event/ActionEvent;)V" line="128"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$init$4" desc="(Ljavax/swing/JTextField;Ljavax/swing/JTextField;Ljava/awt/event/ActionEvent;)V" line="96"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$init$3" desc="(Ljavax/swing/JTextField;Ljavax/swing/JTextField;Ljava/awt/event/ActionEvent;)V" line="91"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$init$2" desc="(Ljavax/swing/JTextField;Ljavax/swing/JTextField;Ljava/awt/event/ActionEvent;)V" line="86"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$init$1" desc="(Ljava/awt/event/ActionEvent;)V" line="70"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Z)V" line="54"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="374" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1133" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="55" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/aikiit/spamprotector/AntiSpamApplication"><method name="initApplication" desc="()V" line="40"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="59"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$initApplication$0" desc="()V" line="42"><counter type="INSTRUCTION" missed="90" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="251" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="de/aikiit/spamprotector/AntiSpamApplet"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="()V" line="33"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="106" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="AntiSpamApplication.java"><line nr="33" mi="10" ci="0" mb="0" cb="0"/><line nr="40" mi="9" ci="0" mb="0" cb="0"/><line nr="42" mi="11" ci="0" mb="0" cb="0"/><line nr="43" mi="12" ci="0" mb="0" cb="0"/><line nr="44" mi="11" ci="0" mb="0" cb="0"/><line nr="45" mi="10" ci="0" mb="0" cb="0"/><line nr="46" mi="14" ci="0" mb="0" cb="0"/><line nr="47" mi="11" ci="0" mb="0" cb="0"/><line nr="48" mi="10" ci="0" mb="0" cb="0"/><line nr="49" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="8" ci="0" mb="0" cb="0"/><line nr="59" mi="8" ci="0" mb="0" cb="0"/><line nr="60" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="251" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="GUI.java"><line nr="40" mi="13" ci="0" mb="0" cb="0"/><line nr="43" mi="10" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="53" mi="11" ci="0" mb="0" cb="0"/><line nr="54" mi="11" ci="0" mb="0" cb="0"/><line nr="56" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="11" ci="0" mb="0" cb="0"/><line nr="68" mi="13" ci="0" mb="0" cb="0"/><line nr="69" mi="13" ci="0" mb="0" cb="0"/><line nr="70" mi="42" ci="0" mb="0" cb="0"/><line nr="71" mi="14" ci="0" mb="0" cb="0"/><line nr="73" mi="9" ci="0" mb="0" cb="0"/><line nr="76" mi="11" ci="0" mb="0" cb="0"/><line nr="77" mi="10" ci="0" mb="0" cb="0"/><line nr="78" mi="10" ci="0" mb="0" cb="0"/><line nr="79" mi="13" ci="0" mb="0" cb="0"/><line nr="80" mi="10" ci="0" mb="0" cb="0"/><line nr="81" mi="10" ci="0" mb="0" cb="0"/><line nr="84" mi="13" ci="0" mb="0" cb="0"/><line nr="85" mi="13" ci="0" mb="0" cb="0"/><line nr="86" mi="25" ci="0" mb="0" cb="0"/><line nr="89" mi="13" ci="0" mb="0" cb="0"/><line nr="90" mi="13" ci="0" mb="0" cb="0"/><line nr="91" mi="25" ci="0" mb="0" cb="0"/><line nr="93" mi="13" ci="0" mb="0" cb="0"/><line nr="94" mi="13" ci="0" mb="0" cb="0"/><line nr="95" mi="12" ci="0" mb="0" cb="0"/><line nr="96" mi="10" ci="0" mb="0" cb="0"/><line nr="97" mi="10" ci="0" mb="0" cb="0"/><line nr="98" mi="8" ci="0" mb="0" cb="0"/><line nr="100" mi="11" ci="0" mb="0" cb="0"/><line nr="101" mi="11" ci="0" mb="0" cb="0"/><line nr="102" mi="11" ci="0" mb="0" cb="0"/><line nr="105" mi="14" ci="0" mb="0" cb="0"/><line nr="107" mi="13" ci="0" mb="0" cb="0"/><line nr="108" mi="13" ci="0" mb="0" cb="0"/><line nr="109" mi="10" ci="0" mb="0" cb="0"/><line nr="110" mi="11" ci="0" mb="0" cb="0"/><line nr="111" mi="11" ci="0" mb="0" cb="0"/><line nr="113" mi="13" ci="0" mb="0" cb="0"/><line nr="114" mi="13" ci="0" mb="0" cb="0"/><line nr="115" mi="10" ci="0" mb="0" cb="0"/><line nr="116" mi="11" ci="0" mb="0" cb="0"/><line nr="117" mi="11" ci="0" mb="0" cb="0"/><line nr="120" mi="12" ci="0" mb="0" cb="0"/><line nr="121" mi="11" ci="0" mb="0" cb="0"/><line nr="122" mi="11" ci="0" mb="0" cb="0"/><line nr="125" mi="20" ci="0" mb="2" cb="0"/><line nr="126" mi="13" ci="0" mb="0" cb="0"/><line nr="127" mi="13" ci="0" mb="0" cb="0"/><line nr="128" mi="20" ci="0" mb="0" cb="0"/><line nr="129" mi="11" ci="0" mb="0" cb="0"/><line nr="131" mi="20" ci="0" mb="0" cb="0"/><line nr="132" mi="10" ci="0" mb="0" cb="0"/><line nr="133" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1133" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="55" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AntiSpamApplet.java"><line nr="27" mi="10" ci="0" mb="0" cb="0"/><line nr="33" mi="14" ci="0" mb="0" cb="0"/><line nr="34" mi="14" ci="0" mb="0" cb="0"/><line nr="35" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="106" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1490" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="72" covered="0"/><counter type="COMPLEXITY" missed="33" covered="0"/><counter type="METHOD" missed="29" covered="0"/><counter type="CLASS" missed="3" covered="0"/></package><counter type="INSTRUCTION" missed="2740" covered="2847"/><counter type="BRANCH" missed="13" covered="29"/><counter type="LINE" missed="77" covered="159"/><counter type="COMPLEXITY" missed="54" covered="29"/><counter type="METHOD" missed="46" covered="16"/><counter type="CLASS" missed="4" covered="3"/></report>